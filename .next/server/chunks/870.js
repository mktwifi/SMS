"use strict";exports.id=870,exports.ids=[870],exports.modules={26670:(e,t)=>{function r(){return null}Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"default",{enumerable:!0,get:function(){return r}}),("function"==typeof t.default||"object"==typeof t.default&&null!==t.default)&&void 0===t.default.__esModule&&(Object.defineProperty(t.default,"__esModule",{value:!0}),Object.assign(t.default,t),e.exports=t.default)},3870:(e,t,r)=>{r.d(t,{ZF:()=>ty});var i=r(17577),o=r(46226),n=/\/v\d+\//,a=/\.(ai|avif|gif|png|webp|bmp|bw|djvu|dng|ps|ept|eps|eps3|fbx|flif|gif|glb|gltf|heif|heic|ico|indd|jpg|jpe|jpeg|jp2|wdp|jxr|hdp|obj|pdf|ply|png|psd|arw|cr2|svg|tga|tif|tiff|u3ma|usdz|webp|3g2|3gp|avi|flv|m3u8|ts|m2ts|mts|mov|mkv|mp4|mpeg|mpd|mxf|ogv|webm|wmv)$/i,s=/https?:\/\/(?<host>[^/]+)\/(?<cloudName>[^/]+)?\/?(?<assetType>image|images|video|videos|raw|files)\/(?<deliveryType>upload|fetch|private|authenticated|sprite|facebook|twitter|youtube|vimeo)?\/?(?<signature>s--([a-zA-Z0-9_-]{8}|[a-zA-Z0-9_-]{32})--)?\/?(?<transformations>(?:[^_/]+_[^,/]+,?\/?)*\/)*(?<version>v\d+|\w{1,2})\/(?<publicId>[^\s]+)$/,l=["images","videos","files"];function c(e){if("string"!=typeof e)throw Error("Failed to parse URL - Invalid src: Is not a string");if(!n.test(e))throw Error("Failed to parse URL - Invalid src: Does not include version (Ex: /v1234/)");let[t,r]=e.split("?"),i=u(t),o=t;i&&(o=t.replace(RegExp(`${i}$`),""));let a=o.match(s),c=a?.groups?.transformations?.split("/").filter(e=>!!e),d={...a?.groups,format:i,seoSuffix:void 0,transformations:c||[],queryParams:{},version:a?.groups?.version?parseInt(a.groups.version.replace("v","")):void 0};if("res.cloudinary.com"===d.host&&!d.cloudName)throw Error("Failed to parse URL - Invalid src: Cloudinary URL delivered from res.cloudinary.com must include Cloud Name (ex: res.cloudinary.com/<Cloud Name>/image/...)");if(r&&(d.queryParams=r.split("&").reduce((e,t)=>{let[r,i]=t.split("=");return e[r]=i,e},{})),d.assetType&&l.includes(d.assetType)){let e=d.publicId?.split("/")||[];d.seoSuffix=e.pop(),d.publicId=e.join("/")}return d.publicId&&(d.publicId=decodeURIComponent(d.publicId)),d}function u(e){let t=e.match(a);if(null!==t)return t[0]}async function d(e){try{let t=await fetch(e.src);if(423===t.status)return await new Promise(e=>setTimeout(e,500)),await d(e);return t.ok}catch{return!1}}function p(e,t){return Object.prototype.hasOwnProperty.call(e,t)}var f=r(27256);class m{constructor(e){this.values=[],this.delimiter=":",this.hasValue(e)&&this.addValue(e)}toString(){return this.values.join(this.delimiter)}hasValue(e){return null!=e&&""!==e}addValue(e){return Array.isArray(e)?this.values=this.values.concat(e):this.values.push(e),this.values=this.values.filter(e=>this.hasValue(e)),this}setDelimiter(e){return this.delimiter=e,this}}class h extends Error{constructor(e="Unsupported"){super(e)}}function g(){return this._qualifierModel||{error:new h(`unsupported qualifier ${this.constructor.name}`)}}class y{constructor(){this._qualifierModel={}}toJson(){return g.apply(this)}}class b extends y{constructor(e,t){super(),this.delimiter="_",this.key=e,t instanceof m?this.qualifierValue=t:(this.qualifierValue=new m,this.qualifierValue.addValue(t))}toString(){let{key:e,delimiter:t,qualifierValue:r}=this;return`${e}${t}${r.toString()}`}addValue(e){return this.qualifierValue.addValue(e),this}}class _ extends b{constructor(e,t){super("fl",t?new m([e,`${t}`]).setDelimiter(":"):e),this.flagValue=t}toString(){return super.toString().replace(/\./g,"%2E")}getFlagValue(){return this.flagValue}}function z(){var e,t,r;let i=this._actionModel&&Object.keys(this._actionModel).length,o=null===(r=null===(t=null===(e=this._actionModel)||void 0===e?void 0:e.source)||void 0===t?void 0:t.transformation)||void 0===r?void 0:r.error;return o&&o instanceof Error?{error:o}:i?this._actionModel:{error:new h(`unsupported action ${this.constructor.name}`)}}class v{constructor(){this._actionModel={}}toJson(){return z.apply(this)}}class x extends v{constructor(){super(...arguments),this.qualifiers=new Map,this.flags=[],this.delimiter=",",this.actionTag=""}prepareQualifiers(){}getActionTag(){return this.actionTag}setActionTag(e){return this.actionTag=e,this}toString(){return this.prepareQualifiers(),(function(e,t){let r=Array.from(e.entries());return t.forEach(e=>{r.push(["fl",e])}),r.sort().map(e=>e[1])})(this.qualifiers,this.flags).join(this.delimiter)}addQualifier(e){if("string"==typeof e){let[t,r]=e.toLowerCase().split("_");"fl"===t?this.flags.push(new _(r)):this.qualifiers.set(t,new b(t,r))}else this.qualifiers.set(e.key,e);return this}addFlag(e){return"string"==typeof e?this.flags.push(new _(e)):e instanceof _&&this.flags.push(e),this}addValueToQualifier(e,t){return this.qualifiers.get(e).addValue(t),this}}class w extends x{constructor(e){super(),this._actionModel={},this.addQualifier(new b("b",new m(function(e){return e&&e.match(/^#/)?`rgb:${e.substr(1)}`:e}(e)).setDelimiter("_"))),this._actionModel.color=e,this._actionModel.actionType="backgroundColor"}static fromJson(e){let{color:t}=e;return new this(t)}}class S{constructor(e){this.raw=e}toString(){return this.raw}toJson(){return{error:new h(`unsupported action ${this.constructor.name}`)}}}class O extends m{constructor(e){super(e),this.val=e}getValue(){return this.val}}function A(e){let t={};return Object.keys(e).forEach(r=>{t[e[r]]=r}),t}A({444:"CHROMA_444",420:"CHROMA_420"}),A({noCmyk:"no_cmyk",keepCmyk:"keep_cmyk",tinySrgb:"tinysrgb",srgbTrueColor:"srgb:truecolor"}),A({limitFit:"limit",limitFill:"lfill",minimumFit:"mfit",thumbnail:"thumb",limitPad:"lpad",minimumPad:"mpad",autoPad:"auto_pad"});let j=A({colorSpace:"cs",dpr:"dpr",density:"dn",defaultImage:"d",format:"f",quality:"q"});A({redEye:"redeye",advancedRedEye:"adv_redeye",oilPaint:"oil_paint",unsharpMask:"unsharp_mask",makeTransparent:"make_transparent",generativeRestore:"gen_restore",upscale:"upscale"}),A({autoBest:"auto:best",autoEco:"auto:eco",autoGood:"auto:good",autoLow:"auto:low",jpegminiHigh:"jpegmini:1",jpegminiMedium:"jpegmini:2",jpegminiBest:"jpegmini:0"}),A({fullHd:"full_hd",fullHdWifi:"full_hd_wifi",fullHdLean:"full_hd_lean",hdLean:"hd_lean"});class N extends x{constructor(e,t,r){let i;super(),this._actionModel={},i=t instanceof O?t.getValue():t,this._actionModel.actionType=j[e],this._actionModel[r]=i,this.addQualifier(new b(e,t))}}class $ extends _{constructor(e){super("progressive",e)}}class C extends N{constructor(e,t){super(e,t,"formatType")}lossy(){return this._actionModel.lossy=!0,this.addFlag(new _("lossy")),this}progressive(e){return e instanceof $?(this._actionModel.progressive={mode:e.getFlagValue()},this.addFlag(e)):(this._actionModel.progressive={mode:e},this.addFlag(new _("progressive",e))),this}preserveTransparency(){return this._actionModel.preserveTransparency=!0,this.addFlag(new _("preserve_transparency")),this}static fromJson(e){let t;let{formatType:r,lossy:i,progressive:o,preserveTransparency:n}=e;return t=r?new this("f",r):new this("f"),o&&(o.mode?t.progressive(o.mode):t.progressive()),i&&t.lossy(),n&&t.preserveTransparency(),t}}class T{constructor(){this.actions=[]}addAction(e){let t;if("string"==typeof e){if(e.indexOf("/")>=0)throw"addAction cannot accept a string with a forward slash in it - /, use .addTransformation() instead";t=new S(e)}else t=e;return this.actions.push(t),this}addTransformation(e){return e instanceof T?this.actions=this.actions.concat(e.actions):this.actions.push(new S(e)),this}toString(){return this.actions.map(e=>e.toString()).filter(e=>e).join("/")}animated(e){return this.addAction(e)}border(e){return this.addAction(e)}reshape(e){return this.addAction(e)}resize(e){return this.addAction(e)}quality(e){return this.addAction(new C("q",e)),this}format(e){return this.addAction(new C("f",e)),this}roundCorners(e){return this.addAction(e)}overlay(e){return this.addAction(e)}underlay(e){return e.setLayerType("u"),this.addAction(e)}addVariable(e){return this.addAction(e)}conditional(e){return this.addAction(e)}effect(e){return this.addAction(e)}adjust(e){return this.addAction(e)}rotate(e){return this.addAction(e)}namedTransformation(e){return this.addAction(e)}delivery(e){return this.addAction(e)}backgroundColor(e){return this.addAction(new w(e))}psdTools(e){return this.addAction(e)}extract(e){return this.addAction(e)}addFlag(e){let t=new x,r=e;return"string"==typeof e&&(r=new _(e)),t.addQualifier(r),this.addAction(t)}customFunction(e){return this.addAction(e)}transcode(e){return this.addAction(e)}videoEdit(e){return this.addAction(e)}toJson(){let e=[];for(let t of this.actions){let r=t.toJson();if("error"in r&&r.error)return r;e.push(r)}return{actions:e}}}class q extends T{}class E{filterOutNonSupportedKeys(e,t){let r=Object.create({});return"object"!=typeof e||e instanceof Array?Object.create({}):(Object.keys(e).forEach(i=>{t.indexOf(i)>=0?r[i]=e[i]:console.warn("Warning - unsupported key provided to configuration: ",i)}),r)}}let J=E,k=["cname","secureDistribution","privateCdn","signUrl","longUrlSignature","shorten","useRootPath","secure","forceVersion","analytics","queryParams"];class R extends J{constructor(e){super(),Object.assign(this,{secure:!0},this.filterOutNonSupportedKeys(e,k))}extend(e){return new R(Object.assign({},this,this.filterOutNonSupportedKeys(e,k)))}setCname(e){return this.cname=e,this}setSecureDistribution(e){return this.secureDistribution=e,this}setPrivateCdn(e){return this.privateCdn=e,this}setSignUrl(e){return this.signUrl=e,this}setLongUrlSignature(e){return this.longUrlSignature=e,this}setShorten(e){return this.shorten=e,this}setUseRootPath(e){return this.useRootPath=e,this}setSecure(e){return this.secure=e,this}setForceVersion(e){return this.forceVersion=e,this}setQueryParams(e){return this.queryParams=e,this}}function I(e,t,r){let i=t>>0,o=String(void 0!==r?r:" ");return e.length>i?String(e):((i-=e.length)>o.length&&(o+=function(e,t){let r=t,i="";for(;r>0;)i+=e,r--;return i}(o,i/o.length)),o.slice(0,i)+String(e))}let P={},U=0;function L(e){let t="",r=e.split(".").length,i=parseInt((function(e){if(e.split(".").length<2)throw Error("invalid semVer, must have at least two segments");return e.split(".").reverse().map(e=>{let t=+e;if(isNaN(t)||t<0)throw"Invalid version number provided";return I(e,2,"0")}).join(".")})(e).split(".").join("")).toString(2);if((i=I(i,6*r,"0")).length%6!=0)throw"Version must be smaller than 43.21.26)";return i.match(/.{1,6}/g).forEach(e=>{t+=P[e]}),t}function D(e){let t=function(e){let t={sdkSemver:e.sdkSemver,techVersion:e.techVersion,sdkCode:e.sdkCode,product:e.product,feature:"0"};return e.accessibility&&(t.feature="D"),e.lazyload&&(t.feature="C"),e.responsive&&(t.feature="A"),e.placeholder&&(t.feature="B"),t}(function(e){let t={techVersion:function(){let e="0.0.0";if("undefined"!=typeof window)return e;try{return process.versions.node||e}catch(t){return e}}(),sdkCode:"T",sdkSemver:"1.15.0".split("-")[0],product:"A",responsive:!1,placeholder:!1,lazyload:!1,accessibility:!1};return e?Object.assign(Object.assign({},t),e):t}(e));try{let e=function(e){let t=e.split(".");return`${t[0]}.${t[1]}`}(t.techVersion),r=L(t.sdkSemver),i=L(e),o=t.feature,n=t.sdkCode,a=t.product;return`B${a}${n}${r}${i}${o}`}catch(e){return"E"}}"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split("").forEach(e=>{let t=U.toString(2);P[t=I(t,6,"0")]=e,U++});let F={"image/upload":"images","image/private":"private_images","image/authenticated":"authenticated_images","raw/upload":"files","video/upload":"videos"};class M{constructor(e,t={},r){this.setPublicID(e),this.setCloudConfig(t),this.setURLConfig(r)}setURLConfig(e){return this.urlConfig=new R(e),this}setCloudConfig(e){return this.cloudName=e.cloudName,this.apiKey=e.apiKey,this.apiSecret=e.apiSecret,this.authToken=e.authToken,this}setPublicID(e){return this.publicID=e?e.toString():"",this}setDeliveryType(e){return this.deliveryType=e,this}setSuffix(e){return this.suffix=e,this}setSignature(e){return this.signature=e,this}setVersion(e){return e&&(this.version=e),this}setAssetType(e){return e&&(this.assetType=e),this}sign(){return this}toURL(e={}){return this.createCloudinaryURL(null,e.trackedAnalytics)}validateAssetForURLCreation(){if(void 0===this.cloudName)throw"You must supply a cloudName when initializing the asset";let e=this.suffix&&this.suffix.indexOf(".")>=0,t=this.suffix&&this.suffix.indexOf("/")>=0;if(e||t)throw"`suffix`` should not include . or /"}getResourceType(){var e,t;let r=(e=this.assetType)?e:"image",i=(t=this.deliveryType)?t:"upload",o=!!this.suffix,n=`${r}/${i}`,a=F[`${r}/${i}`],s=this.urlConfig.useRootPath,l=this.urlConfig.shorten;if(s){if("image/upload"===n)return"";throw Error(`useRootPath can only be used with assetType: 'image' and deliveryType: 'upload'. Provided: ${n} instead`)}if(l&&"image/upload"===n)return"iu";if(o){if(a)return a;throw Error(`URL Suffix only supported for ${Object.keys(F).join(", ")}, Provided: ${n} instead`)}return n}getSignature(){return this.signature?`s--${this.signature}--`:""}createCloudinaryURL(e,t){var r,i,o;if(!this.publicID)return"";this.validateAssetForURLCreation();let n=function(e,t){let r=t.secure,i=t.privateCdn,o=t.cname,n=t.secureDistribution;return r||o?r&&!n&&i?`https://${e}-res.cloudinary.com`:r&&!n?`https://res.cloudinary.com/${e}`:r&&n&&i?`https://${n}`:r&&n?`https://${n}/${e}`:!r&&o?`http://${o}/${e}`:"ERROR":`http://res.cloudinary.com/${e}`}(this.cloudName,this.urlConfig),a=e?e.toString():"",s=(r=this.publicID,i=this.version,o=this.urlConfig.forceVersion,i?`v${i}`:r.match(/^v[0-9]+/)||r.match(/^https?:\//)||0>r.indexOf("/")?"":!1!==o?"v1":""),l=this.publicID;if("string"==typeof e)return[n,this.getResourceType(),this.getSignature(),a,s,l.replace(/,/g,"%2C"),this.suffix].filter(e=>e).join("/");{let e=[encodeURI(n),this.getResourceType(),this.getSignature(),encodeURI(a),s,encodeURI(l).replace(/,/g,"%2C"),this.suffix&&encodeURI(this.suffix)].filter(e=>e).join("/").replace(/\?/g,"%3F").replace(/=/g,"%3D"),r=!1!==this.urlConfig.analytics&&!l.includes("?"),i="";if("object"==typeof this.urlConfig.queryParams)try{let e=new URLSearchParams(this.urlConfig.queryParams);r&&e.set("_a",D(t)),i=e.toString()}catch(e){console.error("Error: URLSearchParams is not available so the queryParams object cannot be parsed, please try passing as an already parsed string")}else i=this.urlConfig.queryParams||"",r&&(i+=`${i.length>0?"&":""}_a=${D(t)}`);return i?`${e}?${i}`:e}}}class V extends M{constructor(e,t,r,i){super(e,t,r),this.transformation=i}animated(e){return this.transformation.animated(e),this}border(e){return this.transformation.border(e),this}reshape(e){return this.transformation.reshape(e),this}resize(e){return this.transformation.resize(e),this}quality(e){return this.addAction(new C("q",e)),this}format(e){return this.addAction(new C("f",e)),this}roundCorners(e){return this.transformation.roundCorners(e),this}overlay(e){return this.transformation.overlay(e),this}addVariable(e){return this.transformation.addVariable(e),this}conditional(e){return this.transformation.conditional(e),this}effect(e){return this.transformation.effect(e),this}adjust(e){return this.transformation.adjust(e),this}rotate(e){return this.transformation.rotate(e),this}namedTransformation(e){return this.transformation.namedTransformation(e),this}delivery(e){return this.transformation.delivery(e),this}backgroundColor(e){return this.transformation.backgroundColor(e),this}psdTools(e){return this.transformation.psdTools(e),this}extract(e){return this.transformation.extract(e),this}addFlag(e){return this.transformation.addFlag(e),this}customFunction(e){return this.transformation.customFunction(e),this}addAction(e){return this.transformation.addAction(e),this}addTransformation(e){return this.transformation.addTransformation(e),this}toString(){return this.transformation.toString()}underlay(e){return this.transformation.underlay(e),this}toURL(e={}){return this.createCloudinaryURL(this.transformation,null==e?void 0:e.trackedAnalytics)}}class B extends V{constructor(e,t,r){super(e,t,r,new q)}}class W extends T{}class H extends V{constructor(e,t,r){super(e,t,r,new W),this.assetType="video"}transcode(e){return this.transformation.transcode(e),this}videoEdit(e){return this.transformation.videoEdit(e),this}}class Q{constructor(e){e&&(this.cloudinaryConfig=e)}image(e){return new B(e,this.cloudinaryConfig.cloud,this.cloudinaryConfig.url)}video(e){return new H(e,this.cloudinaryConfig.cloud,this.cloudinaryConfig.url)}setConfig(e){return this.cloudinaryConfig=e,this}getConfig(){return this.cloudinaryConfig}extendConfig(){}}var K=Object.defineProperty,Y={};((e,t)=>{for(var r in t)K(e,r,{get:t[r],enumerable:!0})})(Y,{angle:()=>ee,aspectRatio:()=>er,aspectRatioModesEnum:()=>et,crop:()=>ei,cropModesEnum:()=>G,extractMode:()=>eo,extractModesEnum:()=>X,flags:()=>en,flagsEnum:()=>Z,format:()=>ea,gravity:()=>es,height:()=>el,multiple:()=>ec,prompt:()=>eu,width:()=>ed,x:()=>ep,y:()=>ef,zoom:()=>em});var G=f.z.enum(["auto","crop","fill","fill_pad","fit","imagga_crop","imagga_scale","lfill","limit","lpad","mfit","mpad","pad","scale","thumb"]),X=f.z.enum(["content","mask"]),Z=f.z.enum(["animated","any_format","apng","attachment","awebp","clip","clip_evenodd","cutter","force_icc","force_strip","getinfo","group4","hlsv3","ignore_aspect_ratio","ignore_mask_channels","immutable_cache","keep_attribution","keep_dar","keep_iptc","layer_apply","lossy","mono","no_overflow","no_stream","png8_fl_png24_fl_png32","preserve_transparency","progressive","rasterize","region_relative","relative","replace_image","sanitize","splice","streaming_attachment","strip_profile","text_disallow_overflow","text_no_trim","tiff8_lzw","tiled","truncate_ts","waveform"]),ee={qualifier:"a",schema:f.z.union([f.z.string(),f.z.number()]).describe(JSON.stringify({text:"Rotates or flips an asset by the specified number of degrees or automatically according to its orientation or available metadata.",url:"https://cloudinary.com/documentation/transformation_reference#a_angle"}))},et=f.z.enum(["vflip","hflip","ignore","auto_right","auto_left"]),er={qualifier:"ar",schema:f.z.union([f.z.number(),et,f.z.intersection(f.z.string(),f.z.object({}))]).describe(JSON.stringify({text:"Crops or resizes the asset to a new aspect ratio.",url:"https://cloudinary.com/documentation/transformation_reference#ar_aspect_ratio"}))},ei={qualifier:"c",schema:G.describe(JSON.stringify({text:"Mode to use when cropping an asset.",url:"https://cloudinary.com/documentation/transformation_reference#c_crop_resize"}))},eo={schema:X.default("content").describe(JSON.stringify({text:"Whether to keep the content of the extracted area, or to replace it with a mask.",url:"https://cloudinary.com/documentation/transformation_reference#e_extract"}))},en={qualifier:"fl",schema:f.z.union([Z,f.z.array(Z)]).describe(JSON.stringify({text:"Alters the regular behavior of another transformation or the overall delivery behavior.",url:"https://cloudinary.com/documentation/transformation_reference#fl_flag"}))},ea={qualifier:"f",schema:f.z.string().describe(JSON.stringify({text:"Converts (if necessary) and delivers an asset in the specified format regardless of the file extension used in the delivery URL.",url:"https://cloudinary.com/documentation/transformation_reference#f_format"}))},es={qualifier:"g",schema:f.z.union([f.z.enum(["auto","auto_content_aware","center","custom","east","face","face_center","multi_face","north","north_east","north_west","south","south_east","south_west","west"]),f.z.intersection(f.z.string(),f.z.object({}))]).describe(JSON.stringify({text:"Determines which part of an asset to focus on. Note: Default of auto is applied for supported crop modes only.",url:"https://cloudinary.com/documentation/transformation_reference#g_gravity"}))},el={qualifier:"h",schema:f.z.union([f.z.number(),f.z.string()]).describe(JSON.stringify({text:"A qualifier that determines the height of a transformed asset or an overlay.",url:"https://cloudinary.com/documentation/transformation_reference#h_height"}))},ec={schema:f.z.boolean().describe(JSON.stringify({text:"Should generative AI features detect multiple instances."}))},eu={schema:f.z.string().describe(JSON.stringify({text:"Natural language descriptions used for generative AI capabilities."}))},ed={qualifier:"w",schema:f.z.union([f.z.number(),f.z.string()]).describe(JSON.stringify({text:"A qualifier that sets the desired width of an asset using a specified value, or automatically based on the available width.",url:"https://cloudinary.com/documentation/transformation_reference#w_width"}))},ep={qualifier:"x",schema:f.z.union([f.z.string(),f.z.number()]).describe(JSON.stringify({text:"Adjusts the starting location or offset of the x axis.",url:"https://cloudinary.com/documentation/transformation_reference#x_y_coordinates"}))},ef={qualifier:"y",schema:f.z.union([f.z.string(),f.z.number()]).describe(JSON.stringify({text:"Adjusts the starting location or offset of the y axis.",url:"https://cloudinary.com/documentation/transformation_reference#x_y_coordinates"}))},em={schema:f.z.string().describe(JSON.stringify({text:"Controls how close to crop to the detected coordinates when using face-detection, custom-coordinate, or object-specific gravity.",url:"https://cloudinary.com/documentation/transformation_reference#z_zoom"}))},eh=[{test:function(e){return"string"==typeof e&&!!e.startsWith("#")},convert:function(e){return`rgb:${e.replace("#","")}`}}],eg={aspectRatio:er,crop:ei,gravity:es,height:el,width:ed},ey={angle:ee,gravity:es,x:ep,y:ef},eb={alignment:{qualifier:!1,order:6},antialias:{qualifier:"antialias"},border:{qualifier:"bo",location:"primary"},color:{qualifier:"co",location:"primary",converters:eh},fontFamily:{qualifier:!1,order:1},fontSize:{qualifier:!1,order:2},fontStyle:{qualifier:!1,order:4},fontWeight:{qualifier:!1,order:3},hinting:{qualifier:"hinting"},letterSpacing:{qualifier:"letter_spacing"},lineSpacing:{qualifier:"line_spacing"},stroke:{qualifier:"self",order:7},textDecoration:{qualifier:!1,order:5}},e_={angle:ee,art:{prefix:"e",qualifier:"art",schema:f.z.string().describe(JSON.stringify({text:"Applies the selected artistic filter.",url:"https://cloudinary.com/documentation/transformation_reference#e_art"}))},autoBrightness:{prefix:"e",qualifier:"auto_brightness",schema:f.z.union([f.z.string(),f.z.boolean()]).describe(JSON.stringify({text:"Automatically adjusts the image brightness and blends the result with the original image.",url:"https://cloudinary.com/documentation/transformation_reference#e_auto_brightness"}))},autoColor:{prefix:"e",qualifier:"auto_color",schema:f.z.union([f.z.string(),f.z.boolean()]).describe(JSON.stringify({text:"Automatically adjusts the image color balance and blends the result with the original image.",url:"https://cloudinary.com/documentation/transformation_reference#e_auto_color"}))},autoContrast:{prefix:"e",qualifier:"auto_contrast",schema:f.z.union([f.z.string(),f.z.boolean()]).describe(JSON.stringify({text:"Automatically adjusts the image contrast and blends the result with the original image.",url:"https://cloudinary.com/documentation/transformation_reference#e_auto_contrast"}))},assistColorblind:{prefix:"e",qualifier:"assist_colorblind",schema:f.z.union([f.z.string(),f.z.boolean()]).describe(JSON.stringify({text:"Applies stripes or color adjustment to help people with common color blind conditions to differentiate between colors that are similar for them.",url:"https://cloudinary.com/documentation/transformation_reference#e_assist_colorblind"}))},background:{qualifier:"b",schema:f.z.string().describe(JSON.stringify({text:"Applies a background to empty or transparent areas.",url:"https://cloudinary.com/documentation/transformation_reference#b_background"}))},blackwhite:{prefix:"e",qualifier:"blackwhite",schema:f.z.union([f.z.string(),f.z.boolean()]).describe(JSON.stringify({text:"Converts an image to black and white.",url:"https://cloudinary.com/documentation/transformation_reference#e_blackwhite"}))},blur:{prefix:"e",qualifier:"blur",schema:f.z.union([f.z.string(),f.z.boolean()]).describe(JSON.stringify({text:"Applies a blurring filter to an asset.",url:"https://cloudinary.com/documentation/transformation_reference#e_blur"}))},blurFaces:{prefix:"e",qualifier:"blur_faces",schema:f.z.union([f.z.string(),f.z.boolean()]).describe(JSON.stringify({text:"Blurs all detected faces in an image.",url:"https://cloudinary.com/documentation/transformation_reference#e_blur_faces"}))},blurRegion:{prefix:"e",qualifier:"blur_region",schema:f.z.union([f.z.string(),f.z.boolean()]).describe(JSON.stringify({text:"Applies a blurring filter to the region of an image specified by x, y, width and height, or an area of text. If no region is specified, the whole image is blurred.",url:"https://cloudinary.com/documentation/transformation_reference#e_blur_region"}))},border:{qualifier:"bo",schema:f.z.string().describe(JSON.stringify({text:"Adds a solid border around an image or video.",url:"https://cloudinary.com/documentation/transformation_reference#bo_border"}))},brightness:{prefix:"e",qualifier:"brightness",schema:f.z.union([f.z.string(),f.z.boolean()]).describe(JSON.stringify({text:"Adjusts the image or video brightness.",url:"https://cloudinary.com/documentation/transformation_reference#e_brightness"}))},brightnessHSB:{prefix:"e",qualifier:"brightness_hsb",schema:f.z.union([f.z.string(),f.z.boolean()]).describe(JSON.stringify({text:"Adjusts image brightness modulation in HSB to prevent artifacts in some images.",url:"https://cloudinary.com/documentation/transformation_reference#e_brightness_hsb"}))},cartoonify:{prefix:"e",qualifier:"cartoonify",schema:f.z.union([f.z.string(),f.z.boolean()]).describe(JSON.stringify({text:"Applies a cartoon effect to an image.",url:"https://cloudinary.com/documentation/transformation_reference#e_cartoonify"}))},color:{qualifier:"co",schema:f.z.string().describe(JSON.stringify({text:"A qualifier that specifies the color to use with the corresponding transformation.",url:"https://cloudinary.com/documentation/transformation_reference#co_color"})),converters:eh},colorize:{prefix:"e",qualifier:"colorize",schema:f.z.string().describe(JSON.stringify({text:"Colorizes an image. By default, gray is used for colorization. You can specify a different color using the color qualifier.",url:"https://cloudinary.com/documentation/transformation_reference#e_colorize"}))},contrast:{prefix:"e",qualifier:"contrast",schema:f.z.union([f.z.string(),f.z.boolean()]).describe(JSON.stringify({text:"Adjusts an image or video contrast.",url:"https://cloudinary.com/documentation/transformation_reference#e_contrast"}))},displace:{prefix:"e",qualifier:"distort",schema:f.z.string().describe(JSON.stringify({text:"Displaces the pixels in an image according to the color channels of the pixels in another specified image (a gradient map specified with the overlay parameter).",url:"https://cloudinary.com/documentation/transformation_reference#e_displace"}))},distort:{prefix:"e",qualifier:"distort",schema:f.z.string().describe(JSON.stringify({text:"Distorts an image to a new shape by either adjusting its corners or by warping it into an arc.",url:"https://cloudinary.com/documentation/transformation_reference#e_distort"}))},fillLight:{prefix:"e",qualifier:"fill_light",schema:f.z.union([f.z.string(),f.z.boolean()]).describe(JSON.stringify({text:"Adjusts the fill light and optionally blends the result with the original image.",url:"https://cloudinary.com/documentation/transformation_reference#e_fill_light"}))},gamma:{prefix:"e",qualifier:"gamma",schema:f.z.union([f.z.string(),f.z.boolean()]).describe(JSON.stringify({text:"Adjusts the image or video gamma level.",url:"https://cloudinary.com/documentation/transformation_reference#e_gamma"}))},gradientFade:{prefix:"e",qualifier:"gradient_fade",schema:f.z.union([f.z.string(),f.z.boolean()]).describe(JSON.stringify({text:"Applies a gradient fade effect from the edge of an image.",url:"https://cloudinary.com/documentation/transformation_reference#e_gradient_fade"}))},grayscale:{prefix:"e",qualifier:"grayscale",schema:f.z.boolean().describe(JSON.stringify({text:"Converts an image to grayscale (multiple shades of gray).",url:"https://cloudinary.com/documentation/transformation_reference#e_grayscale"}))},hue:{prefix:"e",qualifier:"hue",schema:f.z.union([f.z.string(),f.z.boolean()]).describe(JSON.stringify({text:"Adjusts an image's hue.",url:"https://cloudinary.com/documentation/transformation_reference#e_hue"}))},improve:{prefix:"e",qualifier:"improve",schema:f.z.union([f.z.string(),f.z.boolean()]).describe(JSON.stringify({text:"Adjusts an image's colors, contrast and brightness to improve its appearance.",url:"https://cloudinary.com/documentation/transformation_reference#e_improve"}))},loop:{prefix:"e",qualifier:"loop",schema:f.z.union([f.z.boolean(),f.z.number(),f.z.string()]).describe(JSON.stringify({text:"Loops a video or animated image the specified number of times.",url:"https://cloudinary.com/documentation/transformation_reference#e_loop"}))},multiply:{prefix:"e",qualifier:"multiply",schema:f.z.boolean().describe(JSON.stringify({text:"A qualifier that blends image layers using the multiply blend mode",url:"https://cloudinary.com/documentation/transformation_reference#e_multiply"}))},negate:{prefix:"e",qualifier:"negate",schema:f.z.union([f.z.string(),f.z.boolean()]).describe(JSON.stringify({text:"https://cloudinary.com/documentation/transformation_reference#e_negate",url:"https://cloudinary.com/documentation/transformation_reference#e_negate"}))},noise:{prefix:"e",qualifier:"noise",schema:f.z.boolean().describe(JSON.stringify({text:"https://cloudinary.com/documentation/transformation_reference#e_noise",url:"https://cloudinary.com/documentation/transformation_reference#e_noise"}))},oilPaint:{prefix:"e",qualifier:"oil_paint",schema:f.z.union([f.z.string(),f.z.boolean()]).describe(JSON.stringify({text:"https://cloudinary.com/documentation/transformation_reference#e_oil_paint",url:"https://cloudinary.com/documentation/transformation_reference#e_oil_paint"}))},opacity:{qualifier:"o",schema:f.z.union([f.z.string(),f.z.number()]).describe(JSON.stringify({text:"Adjusts the opacity of an asset and makes it semi-transparent.",url:"https://cloudinary.com/documentation/transformation_reference#o_opacity"}))},outline:{prefix:"e",qualifier:"outline",schema:f.z.union([f.z.string(),f.z.boolean()]).describe(JSON.stringify({text:"Adds an outline effect to an image.",url:"https://cloudinary.com/documentation/transformation_reference#e_outline"}))},pixelate:{prefix:"e",qualifier:"pixelate",schema:f.z.union([f.z.string(),f.z.boolean()]).describe(JSON.stringify({text:"Applies a pixelation effect.",url:"https://cloudinary.com/documentation/transformation_reference#e_pixelate"}))},pixelateFaces:{prefix:"e",qualifier:"pixelate_faces",schema:f.z.union([f.z.string(),f.z.boolean()]).describe(JSON.stringify({text:"Pixelates all detected faces in an image.",url:"https://cloudinary.com/documentation/transformation_reference#e_pixelate_faces"}))},pixelateRegion:{prefix:"e",qualifier:"pixelate_region",schema:f.z.union([f.z.string(),f.z.boolean()]).describe(JSON.stringify({text:"Pixelates the region of an image specified by x, y, width and height, or an area of text.",url:"https://cloudinary.com/documentation/transformation_reference#e_pixelate_region"}))},radius:{qualifier:"r",schema:f.z.union([f.z.string(),f.z.number()]).describe(JSON.stringify({text:"Rounds the corners of an image or video.",url:"https://cloudinary.com/documentation/transformation_reference#r_round_corners"}))},redeye:{prefix:"e",qualifier:"redeye",schema:f.z.union([f.z.string(),f.z.boolean()]).describe(JSON.stringify({text:"Automatically removes red eyes in an image.",url:"https://cloudinary.com/documentation/transformation_reference#e_redeye"}))},replaceColor:{prefix:"e",qualifier:"replace_color",schema:f.z.string().describe(JSON.stringify({text:"Maps an input color and those similar to the input color to corresponding shades of a specified output color.",url:"https://cloudinary.com/documentation/transformation_reference#e_replace_color"}))},saturation:{prefix:"e",qualifier:"saturation",schema:f.z.union([f.z.string(),f.z.boolean()]).describe(JSON.stringify({text:"Adjusts an image or video saturation level.",url:"https://cloudinary.com/documentation/transformation_reference#e_saturation"}))},screen:{prefix:"e",qualifier:"screen",schema:f.z.boolean().describe(JSON.stringify({text:"A qualifier that blends image layers using the screen blend mode.",url:"https://cloudinary.com/documentation/transformation_reference#e_screen"}))},sepia:{prefix:"e",qualifier:"sepia",schema:f.z.union([f.z.string(),f.z.boolean()]).describe(JSON.stringify({text:"Changes the color scheme of an image to sepia.",url:"https://cloudinary.com/documentation/transformation_reference#e_sepia"}))},shadow:{prefix:"e",qualifier:"shadow",schema:f.z.union([f.z.string(),f.z.boolean()]).describe(JSON.stringify({text:"Adds a gray shadow to the bottom right of an image.",url:"https://cloudinary.com/documentation/transformation_reference#e_shadow"}))},sharpen:{prefix:"e",qualifier:"sharpen",schema:f.z.union([f.z.string(),f.z.boolean()]).describe(JSON.stringify({text:"Applies a sharpening filter.",url:"https://cloudinary.com/documentation/transformation_reference#e_sharpen"}))},shear:{prefix:"e",qualifier:"shear",schema:f.z.string().describe(JSON.stringify({text:"Skews an image according to the two specified values in degrees.",url:"https://cloudinary.com/documentation/transformation_reference#e_shear"}))},simulateColorblind:{prefix:"e",qualifier:"simulate_colorblind",schema:f.z.union([f.z.string(),f.z.boolean()]).describe(JSON.stringify({text:"Simulates the way an image would appear to someone with the specified color blind condition.",url:"https://cloudinary.com/documentation/transformation_reference#e_simulate_colorblind"}))},tint:{prefix:"e",qualifier:"tint",schema:f.z.union([f.z.string(),f.z.boolean()]).describe(JSON.stringify({text:"Blends an image with one or more tint colors at a specified intensity.",url:"https://cloudinary.com/documentation/transformation_reference#e_tint"}))},trim:{prefix:"e",qualifier:"trim",schema:f.z.union([f.z.string(),f.z.boolean()]).describe(JSON.stringify({text:"Detects and removes image edges whose color is similar to the corner pixels.",url:"https://cloudinary.com/documentation/transformation_reference#e_trim"}))},unsharpMask:{prefix:"e",qualifier:"unsharp_mask",schema:f.z.union([f.z.string(),f.z.boolean()]).describe(JSON.stringify({text:"Applies an unsharp mask filter to an image.",url:"https://cloudinary.com/documentation/transformation_reference#e_unsharp_mask"}))},vectorize:{prefix:"e",qualifier:"vectorize",schema:f.z.union([f.z.string(),f.z.boolean()]).describe(JSON.stringify({text:"Vectorizes an image.",url:"https://cloudinary.com/documentation/transformation_reference#e_vectorize"}))},vibrance:{prefix:"e",qualifier:"vibrance",schema:f.z.union([f.z.string(),f.z.boolean()]).describe(JSON.stringify({text:"Applies a vibrance filter to an image.",url:"https://cloudinary.com/documentation/transformation_reference#e_vibrance"}))},vignette:{prefix:"e",qualifier:"vignette",schema:f.z.union([f.z.string(),f.z.boolean()]).describe(JSON.stringify({text:"Applies a vignette effect to an image.",url:"https://cloudinary.com/documentation/transformation_reference#e_vignette"}))}};function ez({prefix:e,qualifier:t,value:r,converters:i}){let o="";e&&(o=`${e}_`);let n=r;return(i?.forEach(({test:e,convert:t})=>{e(n)&&(n=t(n))}),!0===n||"true"===n)?`${o}${t}`:"string"==typeof n||"number"==typeof n?e?`${o}${t}:${n}`:`${t}_${n}`:void 0}function ev(e){return`(${e.join(";")})`}function ex(e){return"string"!=typeof e?e:parseInt(e)}var ew=["auto","crop","fill","lfill","fill_pad","thumb"],eS=["auto","crop","fill","lfill","fill_pad","thumb"],eO=["crop","thumb"],eA="limit",ej=f.z.object({aspectRatio:er.schema.optional(),type:ei.schema,gravity:es.schema.optional(),height:el.schema.optional(),width:ed.schema.optional(),x:ep.schema.optional(),y:ef.schema.optional(),zoom:em.schema.optional(),source:f.z.boolean().optional()}),eN={aspectRatio:er.schema.optional(),crop:f.z.union([ei.schema,ej,f.z.array(ej)]).default(eA).optional(),gravity:es.schema.optional(),zoom:em.schema.optional()},e$={angle:e_.angle.schema.optional(),art:e_.art.schema.optional(),autoBrightness:e_.autoBrightness.schema.optional(),autoColor:e_.autoColor.schema.optional(),autoContrast:e_.autoContrast.schema.optional(),assistColorblind:e_.assistColorblind.schema.optional(),background:e_.background.schema.optional(),blackwhite:e_.blackwhite.schema.optional(),blur:e_.blur.schema.optional(),blurFaces:e_.blurFaces.schema.optional(),blurRegion:e_.blurRegion.schema.optional(),border:e_.border.schema.optional(),brightness:e_.brightness.schema.optional(),brightnessHSB:e_.brightnessHSB.schema.optional(),cartoonify:e_.cartoonify.schema.optional(),color:e_.color.schema.optional(),colorize:e_.colorize.schema.optional(),contrast:e_.contrast.schema.optional(),distort:e_.distort.schema.optional(),fillLight:e_.fillLight.schema.optional(),gamma:e_.gamma.schema.optional(),gradientFade:e_.gradientFade.schema.optional(),grayscale:e_.grayscale.schema.optional(),improve:e_.improve.schema.optional(),loop:e_.loop.schema.optional(),multiply:e_.multiply.schema.optional(),negate:e_.negate.schema.optional(),oilPaint:e_.oilPaint.schema.optional(),opacity:e_.opacity.schema.optional(),outline:e_.outline.schema.optional(),pixelate:e_.pixelate.schema.optional(),pixelateFaces:e_.pixelateFaces.schema.optional(),pixelateRegion:e_.pixelateRegion.schema.optional(),radius:e_.radius.schema.optional(),redeye:e_.redeye.schema.optional(),replaceColor:e_.replaceColor.schema.optional(),saturation:e_.saturation.schema.optional(),screen:e_.screen.schema.optional(),sepia:e_.sepia.schema.optional(),shadow:e_.shadow.schema.optional(),sharpen:e_.sharpen.schema.optional(),shear:e_.shear.schema.optional(),simulateColorblind:e_.simulateColorblind.schema.optional(),tint:e_.tint.schema.optional(),trim:e_.trim.schema.optional(),unsharpMask:e_.unsharpMask.schema.optional(),vectorize:e_.vectorize.schema.optional(),vibrance:e_.vibrance.schema.optional(),vignette:e_.vignette.schema.optional()},eC={effects:f.z.array(f.z.object(e$)).describe(JSON.stringify({text:"Array of objects specifying transformations to be applied to asset."})).optional(),...e$},{flagsEnum:eT}=Y,eq={flags:en.schema.optional()},eE=f.z.string(),eJ={namedTransformations:f.z.union([eE,f.z.array(eE)]).describe(JSON.stringify({text:"Named transformations to apply to asset.",url:"https://cloudinary.com/documentation/image_transformations#named_transformations"})).optional(),transformations:f.z.union([eE,f.z.array(eE)]).describe(JSON.stringify({text:"Deprecated: use namedTransformations instead",url:"https://cloudinary.com/documentation/image_transformations#named_transformations"})).optional()},ek=f.z.object({alignment:f.z.string().optional(),antialias:f.z.string().optional(),border:f.z.string().optional(),color:f.z.string().optional(),fontFamily:f.z.string().optional(),fontSize:f.z.number().optional(),fontStyle:f.z.union([f.z.string(),f.z.number()]).optional(),fontWeight:f.z.string().optional(),hinting:f.z.union([f.z.string(),f.z.number()]).optional(),letterSpacing:f.z.union([f.z.string(),f.z.number()]).optional(),lineSpacing:f.z.union([f.z.string(),f.z.number()]).optional(),stroke:f.z.string().optional(),text:f.z.string()}),eR=f.z.object({angle:ee.schema.optional(),gravity:es.schema.optional(),x:ep.schema.optional(),y:ef.schema.optional()}),eI=f.z.object({appliedEffects:f.z.array(f.z.object({})).optional(),appliedFlags:en.schema.optional(),effects:f.z.array(f.z.object({})).optional(),crop:ei.schema.optional(),flags:en.schema.optional(),height:el.schema.optional(),position:eR.optional(),publicId:f.z.string().optional(),text:f.z.union([f.z.string(),ek]).optional(),url:f.z.string().optional(),width:ed.schema.optional()}),eP={color:"black",fontFamily:"Arial",fontSize:200,fontWeight:"bold"},eU={overlay:eI.describe(JSON.stringify({text:"Image or text layer that is applied on top of the base image.",url:"https://cloudinary.com/documentation/transformation_reference#l_layer"})).optional(),overlays:f.z.array(eI).describe(JSON.stringify({text:"Image or text layers that are applied on top of the base image.",url:"https://cloudinary.com/documentation/transformation_reference#l_layer"})).optional(),text:f.z.string().describe(JSON.stringify({text:"Text to be overlaid on asset.",url:"https://cloudinary.com/documentation/image_transformations#transformation_url_structure"})).optional()},eL={preserveTransformations:f.z.boolean().describe(JSON.stringify({text:"Preserves transformations from a Cloudinary URL when using using a Cloudinary URL as the asset source (src)."})).optional()},eD=f.z.string(),eF={rawTransformations:f.z.union([eD,f.z.array(eD)]).describe(JSON.stringify({text:"Array of transformation parameters using the Cloudinary URL API to apply to an asset.",url:"https://cloudinary.com/documentation/transformation_reference"})).optional()},eM={removeBackground:f.z.boolean().describe(JSON.stringify({text:"Removes the background of an image using the Cloudinary AI Background Removal Add-On (Required).",url:"https://cloudinary.com/documentation/cloudinary_ai_background_removal_addon"})).optional()},eV={sanitize:f.z.boolean().describe(JSON.stringify({text:"Runs a sanitizer on SVG images.",url:"https://cloudinary.com/documentation/transformation_reference#fl_sanitize"})).optional()},eB={seoSuffix:f.z.string().describe(JSON.stringify({text:"Configures the URL to include an SEO-friendly suffix in the URL",url:"https://cloudinary.com/documentation/advanced_url_delivery_options#seo_friendly_media_asset_urls"})).optional()},eW=f.z.object({angle:ee.schema.optional(),gravity:es.schema.optional(),x:ep.schema.optional(),y:ef.schema.optional()}),eH=f.z.object({appliedEffects:f.z.array(f.z.object({})).optional(),appliedFlags:en.schema.optional(),effects:f.z.array(f.z.object({})).optional(),crop:ei.schema.optional(),flags:en.schema.optional(),height:el.schema.optional(),position:eW.optional(),publicId:f.z.string().optional(),type:f.z.string().optional(),url:f.z.string().optional(),width:ed.schema.optional()}),eQ={underlay:f.z.string().describe(JSON.stringify({text:"Public ID of image that is applied under the base image.",url:"https://cloudinary.com/documentation/transformation_reference#l_layer"})).optional(),underlays:f.z.array(eH).describe(JSON.stringify({text:"Image layers that are applied under the base image.",url:"https://cloudinary.com/documentation/transformation_reference#l_layer"})).optional()},eK={version:f.z.union([f.z.number(),f.z.string()]).describe(JSON.stringify({text:"Custom version number to apply to asset URL.",url:"https://cloudinary.com/documentation/advanced_url_delivery_options#asset_versions"})).optional()},eY=f.z.object({assetType:f.z.string().default("image").describe(JSON.stringify({text:"The type of asset to deliver.",url:"https://cloudinary.com/documentation/image_transformations#transformation_url_structure"})).optional(),deliveryType:f.z.string().default("upload").describe(JSON.stringify({text:"Delivery method of the asset.",url:"https://cloudinary.com/documentation/image_transformations#delivery_types"})).optional(),dpr:f.z.union([f.z.string(),f.z.number()]).describe(JSON.stringify({text:"Delivery method of the asset.",url:"https://cloudinary.com/documentation/image_transformations#delivery_types"})).optional(),format:f.z.string().default("auto").describe(JSON.stringify({text:"Converts (if necessary) and delivers an asset in the specified format.",url:"https://cloudinary.com/documentation/transformation_reference#f_format"})).optional(),height:f.z.union([f.z.string(),f.z.number()]).describe(JSON.stringify({text:"Height of the given asset."})).optional(),quality:f.z.union([f.z.string(),f.z.number(),f.z.string()]).default("auto").describe(JSON.stringify({text:"Quality of the delivered asset",url:"https://cloudinary.com/documentation/transformation_reference#q_quality"})).optional(),src:f.z.string().describe(JSON.stringify({text:"Cloudinary Public ID or versioned Cloudinary URL (/v1234/)"})),strictTransformations:f.z.boolean().describe(JSON.stringify({text:"Gives you the ability to have more control over what transformations are permitted to be used from your Cloudinary account.",url:"https://cloudinary.com/documentation/control_access_to_media#strict_transformations"})).optional(),width:f.z.union([f.z.string(),f.z.number()]).describe(JSON.stringify({text:"Width of the given asset."})).optional(),...eN,...eC,...eq,...eJ,...eU,...eL,...eF,...eM,...eV,...eB,...eQ,...eK}),eG={defaultImage:f.z.string().describe(JSON.stringify({text:"Configures the default image to use in case the given public ID is not available. Must include file extension.",url:"https://cloudinary.com/documentation/transformation_reference#d_default_image"})).optional()},eX={enhance:f.z.boolean().describe(JSON.stringify({text:"Uses AI to analyze an image and make adjustments to enhance the appeal of the image.",url:"https://cloudinary.com/documentation/transformation_reference#e_enhance"})).optional()},eZ={extract:f.z.union([eu.schema.optional(),f.z.array(eu.schema).optional(),f.z.object({invert:f.z.boolean().default(!1).optional(),mode:eo.schema.optional(),multiple:ec.schema.default(!1).optional(),prompt:f.z.union([eu.schema,f.z.array(eu.schema)]).optional()})]).describe(JSON.stringify({text:"Extracts an area or multiple areas of an image, described in natural language.",url:"https://cloudinary.com/documentation/transformation_reference#e_extract"})).optional()};function e0(e){return"string"==typeof e?e:Array.isArray(e)?`(${e.filter(e=>"string"==typeof e).join(";")})`:void 0}var e1={fillBackground:f.z.union([f.z.boolean(),f.z.object({crop:ei.schema.optional(),gravity:es.schema.optional(),prompt:f.z.string().optional()})]).describe(JSON.stringify({text:"Uses Generative Fill to extended padded image with AI",url:"https://cloudinary.com/documentation/transformation_reference#b_gen_fill"})).optional()},e2=f.z.union([f.z.string(),f.z.array(f.z.string())]),e3=f.z.object({prompt:e2.optional(),to:f.z.string().optional(),multiple:f.z.boolean().optional()}),e4={recolor:f.z.union([e2,e3]).describe(JSON.stringify({text:"Uses generative AI to recolor parts of your image, maintaining the relative shading.",url:"https://cloudinary.com/documentation/transformation_reference#e_gen_recolor"})).optional()},e6=f.z.union([f.z.string(),f.z.array(f.z.string())]),e7=f.z.object({prompt:e6.optional(),region:f.z.union([f.z.array(f.z.number()),f.z.array(f.z.array(f.z.number()))]).optional(),multiple:f.z.boolean().optional(),removeShadow:f.z.boolean().optional()}),e8={remove:f.z.union([e6,e7]).describe(JSON.stringify({text:"Applies zooming and/or panning to an image, resulting in a video or animated image.",url:"https://cloudinary.com/documentation/transformation_reference#e_zoompan"})).optional()},e9={replaceBackground:f.z.union([f.z.boolean(),f.z.string(),f.z.object({seed:f.z.number().optional(),prompt:f.z.string().optional()})]).describe(JSON.stringify({text:"Replaces the background of an image with an AI-generated background.",url:"https://cloudinary.com/documentation/transformation_reference#e_gen_background_replace"})).optional()},e5={replace:f.z.union([f.z.array(f.z.string()),f.z.array(f.z.boolean()),f.z.object({to:f.z.string(),from:f.z.string(),preserveGeometry:f.z.boolean().optional()})]).describe(JSON.stringify({text:"Uses generative AI to replace parts of your image with something else.",url:"https://cloudinary.com/documentation/transformation_reference#e_gen_replace"})).optional()},te={restore:f.z.boolean().describe(JSON.stringify({text:"Uses generative AI to restore details in poor quality images or images that may have become degraded through repeated processing and compression.",url:"https://cloudinary.com/documentation/transformation_reference#e_gen_restore"})).optional()},tt={zoompan:f.z.union([f.z.string(),f.z.boolean(),f.z.object({loop:e_.loop.schema.optional(),options:f.z.string()})]).describe(JSON.stringify({text:"Applies zooming and/or panning to an image, resulting in a video or animated image.",url:"https://cloudinary.com/documentation/transformation_reference#e_zoompan"})).optional()},tr=eY.merge(f.z.object({...eG,...eX,...eZ,...e1,...e4,...e8,...e5,...e9,...te,...tt})),ti={streamingProfile:f.z.string().describe(JSON.stringify({text:"The streaming profile to apply when delivering a video using adaptive bitrate streaming.",url:"https://cloudinary.com/documentation/transformation_reference#sp_streaming_profile"})).optional()},to=eY.merge(f.z.object({...ti})),tn=f.z.any(),ta=f.z.any(),ts=[{props:eX,assetTypes:["image","images"],plugin:e=>{let{cldAsset:t,options:r}=e,{enhance:i=!1}=r;return i&&t.effect("e_enhance"),{}}},{props:eZ,assetTypes:["image","images"],plugin:e=>{let{cldAsset:t,options:r}=e,{extract:i}=r;if(!i||void 0===i)return{};let o=[];if("string"==typeof i)o.push(`prompt_${i}`);else if(Array.isArray(i))o.push(`prompt_${e0(i)}`);else if("object"==typeof i&&!Array.isArray(i)){let e=e0(i.prompt);e&&o.push(`prompt_${e}`),!0===i.invert&&o.push("invert_true"),"string"==typeof i.mode&&o.push(`mode_${i.mode}`),!0===i.multiple&&o.push("multiple_true")}if(o.length>0){let e=`e_extract:${o.join(";")}`;t.addTransformation(e)}return{}}},{props:e4,assetTypes:["image","images"],plugin:e=>{let{cldAsset:t,options:r}=e,{recolor:i}=r,o={prompt:void 0,"to-color":void 0,multiple:void 0};Array.isArray(i)?(Array.isArray(i[0])?o.prompt=ev(i[0]):o.prompt=i[0],"string"==typeof i[1]&&(o["to-color"]=i[1])):"object"==typeof i&&("string"==typeof i.prompt?o.prompt=i.prompt:Array.isArray(i.prompt)&&(o.prompt=ev(i.prompt)),"string"==typeof i.to&&(o["to-color"]=i.to),!0===i.multiple&&(o.multiple="true"));let n=Object.entries(o).filter(([,e])=>!!e).map(([e,t])=>`${e}_${t}`).join(";");return n&&t.addTransformation(`e_gen_recolor:${n}`),{}}},{props:eM,assetTypes:["image","images"],plugin:e=>{let{cldAsset:t,options:r}=e,{removeBackground:i=!1}=r;return i&&t.effect("e_background_removal"),{}}},{props:e8,assetTypes:["image","images"],plugin:({cldAsset:e,options:t})=>{let{remove:r}=t,i={prompt:void 0,region:void 0,multiple:void 0,"remove-shadow":void 0};if("string"==typeof r)i.prompt=r;else if(Array.isArray(r))i.prompt=ev(r);else if("object"==typeof r){let e="string"==typeof r.prompt||Array.isArray(r.prompt),t=Array.isArray(r.region);if(e&&t)throw Error("Invalid remove options: you can not have both a prompt and a region. More info: https://cloudinary.com/documentation/transformation_reference#e_gen_remove");"string"==typeof r.prompt?i.prompt=r.prompt:Array.isArray(r.prompt)&&(i.prompt=ev(r.prompt)),Array.isArray(r.region)&&(i.region=function e(t){let r={0:"x",1:"y",2:"w",3:"h"},i=t.map((t,i)=>{if(Array.isArray(t))return e(t);let o=r[i];return`${o}_${t}`}).join(";");return`(${i})`}(r.region)),!0===r.multiple&&(i.multiple="true"),!0===r.removeShadow&&(i["remove-shadow"]="true")}let o=Object.entries(i).filter(([,e])=>!!e).map(([e,t])=>`${e}_${t}`).join(";");return o&&e.addTransformation(`e_gen_remove:${o}`),{}}},{props:e5,assetTypes:["image","images"],plugin:({cldAsset:e,options:t})=>{let{replace:r=null}=t;if(r){let t,i,o=!1;Array.isArray(r)?(t=r[0],i=r[1],o=r[2]||!1):(t=r.from,i=r.to,o=r.preserveGeometry||!1);let n=[`e_gen_replace:from_${t}`,`to_${i}`];o&&n.push(`preserve-geometry_${o}`),e.effect(n.join(";"))}return{}}},{props:e9,assetTypes:["image","images"],plugin:e=>{let{cldAsset:t,options:r}=e,{replaceBackground:i}=r;if(!i||void 0===i)return{};let o=[];"object"==typeof i?(void 0!==i.prompt&&o.push(`prompt_${i.prompt}`),"number"==typeof i.seed&&o.push(`seed_${i.seed}`)):"string"==typeof i&&o.push(`prompt_${i}`);let n="e_gen_background_replace";return o.length>0&&(n=`${n}:${o.join(";")}`),t.addTransformation(n),{}}},{props:te,assetTypes:["image","images"],plugin:({cldAsset:e,options:t})=>{let{restore:r=!1}=t;return r&&e.effect("e_gen_restore"),{}}},{props:eN,assetTypes:["image","images","video","videos"],plugin:e=>{let{cldAsset:t,options:r}=e,i=[];"string"==typeof r.crop||void 0===r.crop?i.push({aspectRatio:r.aspectRatio,height:r.height,gravity:r.gravity,type:r.crop||eA,width:r.width,zoom:r.zoom}):"object"!=typeof r.crop||Array.isArray(r.crop)?Array.isArray(r.crop)&&(i=r.crop):i.push(r.crop),1===i.length&&!0===i[0].source&&i.push({aspectRatio:r.aspectRatio,width:r.width,height:r.height,gravity:r.gravity,type:eA,zoom:r.zoom});let o=[],n=[];for(let e of i){let t={width:e.width,height:e.height};void 0===t.width&&void 0===e.aspectRatio&&(t.width=r.width,void 0===t.height&&(t.height=r.height));let i=function(e){let{aspectRatio:t,type:r,x:i,y:o,zoom:n}=e,a=e.gravity,s=ex(e.height),l=ex(e.width),c=[],u=t&&ew.includes(r),d="number"==typeof i||"string"==typeof i,p="number"==typeof o||"string"==typeof o,f=d||p;return r&&(s||l||u||f)&&c.push(`c_${r}`),u&&c.push(`ar_${t}`),l&&c.push(`w_${l}`),["limit"].includes(r)||"number"!=typeof s||c.push(`h_${s}`),d&&c.push(`x_${i}`),p&&c.push(`y_${o}`),!a&&eS.includes(r)&&!f&&(a="auto"),a&&("auto"!==a||eS.includes(r)?c.push(`g_${a}`):console.warn(`Auto gravity can only be used with crop modes: ${eS.join(", ")}. Not applying gravity.`)),n&&("auto"!==n||eO.includes(r)?c.push(`z_${n}`):console.warn(`Zoom can only be used with crop modes: ${eO.join(", ")}. Not applying zoom.`)),c}({aspectRatio:e.aspectRatio,gravity:e.gravity,type:e.type||eA,x:e.x,y:e.y,zoom:e.zoom,...t});i.length>0&&(!0===e.source?n.push(i):o.push(i))}n.forEach(e=>{e.length>0&&t.addTransformation(e.join(","))});let a={options:{}};return a.options&&o.length>0&&(a.options.resize=o.map(e=>e.join(",")).join("/")),a}},{props:eL,assetTypes:["image","images","video","videos"],plugin:({cldAsset:e,options:t})=>{let{preserveTransformations:r=!1}=t;if(r)try{(function(e){let{transformations:t=[]}=c(e)||{};return t.map(e=>e.split(","))})(t.src).map(e=>e.join(",")).flat().forEach(t=>{e.addTransformation(t)})}catch(e){console.warn(`Failed to preserve transformations: ${e.message}`)}return{}}},{props:eF,assetTypes:["image","images","video","videos"],plugin:({cldAsset:e,options:t})=>{let{rawTransformations:r=[]}=t;return Array.isArray(r)||(r=[r]),r.forEach(t=>{e.addTransformation(t)}),{}}},{props:ti,assetTypes:["video","videos"],plugin:e=>{let{cldAsset:t,options:r}=e,{streamingProfile:i}=r;return"string"==typeof i&&t.addTransformation(`sp_${i}`),{}}},{props:eG,assetTypes:["image","images"],plugin:e=>{let{cldAsset:t,options:r}=e,{defaultImage:i}=r;if("string"==typeof i){u(i)||console.warn("The defaultImage prop may be missing a format and must include it along with the public ID. (Ex: myimage.jpg)");let e=i.replace(/\//g,":");t.addTransformation(`d_${e}`)}return{}}},{props:eC,assetTypes:["image","images","video","videos"],plugin:e=>{let{cldAsset:t,options:r}=e;function i({effects:e,options:t}){return Object.keys(e).map(r=>{let{prefix:i,qualifier:o,converters:n}=e[r];return ez({qualifier:o,prefix:i,value:t?.[r],converters:n})})}return i({effects:e_,options:r}).filter(e=>!!e).forEach(e=>t.effect(e)),Array.isArray(r?.effects)&&r?.effects.forEach(e=>{let r=i({effects:e_,options:e}).filter(e=>!!e).join(",");t.effect(r)}),{}}},{props:e1,assetTypes:["image","images"],plugin:e=>{let{cldAsset:t,options:r}=e,{fillBackground:i}=r;if(void 0===i)return{};let o=ex(r.width),n=ex(r.height),a=r.aspectRatio;if(a||"number"!=typeof n||"number"!=typeof o||(a=`${o}:${n}`),!a)return{};if(!0===i){let e=["b_gen_fill",`ar_${a}`,"c_pad"];t.addTransformation(e.join(","))}else if("object"==typeof i){let{crop:e="pad",gravity:r,prompt:o}=i,n=[`ar_${a}`,`c_${e}`];"string"==typeof o?n.unshift(`b_gen_fill:${o}`):n.unshift("b_gen_fill"),"string"==typeof r&&n.push(`g_${r}`),t.addTransformation(n.join(","))}return{}}},{props:eq,assetTypes:["image","images","video","videos"],plugin:e=>{let{cldAsset:t,options:r}=e,{flags:i=[]}=r;return Array.isArray(i)&&i.length>0?i.forEach(e=>{let{success:r}=eT.safeParse(e);r&&t.addFlag(e)}):"object"==typeof i&&Object.entries(i).forEach(([e,r])=>{let{success:i}=eT.safeParse(e);i&&t.addTransformation(`fl_${e}:${r}`)}),{}}},{props:eU,assetTypes:["image","images","video","videos"],plugin:({cldAsset:e,options:t})=>{let{text:r,overlays:i=[]}=t;function o({publicId:t,url:r,position:i,text:o,effects:n=[],appliedEffects:a=[],flags:s=[],appliedFlags:l=[],...c}){let u;let d="string"==typeof t,f="string"==typeof r,m="object"==typeof o||"string"==typeof o,h="object"==typeof i;if(!d&&!f&&!m){console.warn("An overlay is missing Public ID, URL, or Text");return}m?u="l_text":d?u=`l_${t.replace(/\//g,":")}`:f&&(u=`l_fetch:${"function"==typeof btoa?btoa(r):"undefined"!=typeof Buffer?Buffer.from(r).toString("base64"):void 0}`);let g=[],y=[];if(Object.keys(c).forEach(e=>{if(!p(eg,e))return;let{qualifier:t,converters:r}=eg[e],i=ez({qualifier:t,value:c[e],converters:r});i&&g.push(i)}),n.forEach(e=>{Object.keys(e).forEach(t=>{let r=eg[t]||e_[t]||ey[t];if(!r)return;let{qualifier:i,prefix:o,converters:n}=r,a=ez({qualifier:i,prefix:o,value:e[t],converters:n});a&&g.push(a)})}),a.forEach(e=>{Object.keys(e).forEach(t=>{let r=eg[t]||e_[t]||ey[t];if(!r)return;let{qualifier:i,prefix:o,converters:n}=r,a=ez({qualifier:i,prefix:o,value:e[t],converters:n});a&&y.push(a)})}),(Array.isArray(s)?s:[s]).forEach(e=>{let{success:t}=Z.safeParse(e);t&&g.push(`fl_${e}`)}),(Array.isArray(l)?l:[l]).forEach(e=>{let{success:t}=Z.safeParse(e);t&&y.push(`fl_${e}`)}),m){"string"==typeof o&&(o={...eP,text:o});let e=[];if("object"==typeof o)for(let t of function(e=[],t,r="asc"){let i=[...e];return"string"!=typeof t?i:(i=i.sort(function(e,r){let i=e[t],o=r[t];return("string"==typeof i&&(i=i.toLowerCase()),"string"==typeof o&&(o=o.toLowerCase()),i<o)?-1:i>o?1:0}),"desc"===r)?i.reverse():i}(Object.keys(o).filter(e=>p(eb,e)).map(e=>{let t=o&&p(o,e)&&o[e];return{...eb[e],key:e,value:t,order:eb[e].order||99}}),"order")){let{key:r,value:i,qualifier:o,location:n,converters:a}=t,s=i;a?.forEach(({test:e,convert:t})=>{e(i)&&(s=t(i))}),"primary"===n?g.push(`${o}_${s}`):"self"===o?e.push(r):o?e.push(`${o}_${s}`):e.push(s)}let t={".":"%2E",",":"%2C","/":"%2F"},r=o?.text||"";"string"==typeof r&&Object.keys(t)?.forEach(e=>{r=r?.replace(e,t[e])}),u=`${u}:${e.join("_")}:${r}`}h&&Object.keys(i).forEach(e=>{if(!p(ey,e)||!p(i,e))return;let{qualifier:t,converters:r}=ey[e],o=ez({qualifier:t,value:i[e],converters:r});o&&y.push(o)}),g.length>0&&(u=`${u},${g.join(",")}`),u=`${u}/fl_layer_apply,fl_no_overflow`,y.length>0&&(u=`${u},${y.join(",")}`),e.addTransformation(u)}return Array.isArray(i)&&i.forEach(o),"string"==typeof r?o({text:Object.assign({},eP,{text:r})}):"object"==typeof r&&o({text:Object.assign({},eP,r)}),{}}},{props:eV,assetTypes:["image","images"],plugin:({cldAsset:e,options:t})=>{let{sanitize:r=!0}=t;return r&&("svg"===t.format||e.publicID.endsWith(".svg"))&&e.effect("fl_sanitize"),{}}},{props:eJ,strict:!0,assetTypes:["image","images","video","videos"],plugin:({cldAsset:e,options:t})=>{let{transformations:r,namedTransformations:i}=t;r&&"development"===process.env.NODE_ENVIRONMENT&&console.warn("The transformations prop is deprecated. Please use namedTransformations instead.");let o=i||r||[];return Array.isArray(o)||(o=[o]),o.forEach(t=>{e.addTransformation(`t_${t}`)}),{}}},{props:eB,assetTypes:["image","images","video","videos"],plugin:({cldAsset:e,options:t})=>{let{seoSuffix:r}=t;return"string"==typeof r&&("fetch"===t.deliveryType?console.warn("SEO suffix is not supported with a delivery type of fetch"):e.setSuffix(r)),{}}},{props:eQ,assetTypes:["image","images","video","videos"],plugin:({cldAsset:e,options:t})=>{let{underlay:r,underlays:i=[]}=t;function o({publicId:t,type:r,position:i,effects:o=[],flags:n=[],appliedFlags:a=[],...s}){let l="object"==typeof i;if("string"!=typeof t){console.warn(`An ${r} is missing a Public ID`);return}let c=`u_${t.replace(/\//g,":")}`,u=[],d=[];Object.keys(s).forEach(e=>{if(!p(eg,e))return;let{qualifier:t}=eg[e];u.push(`${t}_${s[e]}`)}),o.forEach(e=>{Object.keys(e).forEach(t=>{if(!p(eg,t))return;let{qualifier:r}=eg[t];u.push(`${r}_${e[t]}`)})}),l&&Object.keys(i).forEach(e=>{if(!p(ey,e))return;let{qualifier:t}=ey[e];d.push(`${t}_${i[e]}`)}),(Array.isArray(n)?n:[n]).forEach(e=>{let{success:t}=Z.safeParse(e);t&&u.push(`fl_${e}`)}),(Array.isArray(a)?a:[a]).forEach(e=>{let{success:t}=Z.safeParse(e);t&&d.push(`fl_${e}`)}),c=`${c},${u.join(",")}`,c=`${c}/fl_layer_apply,fl_no_overflow`,d.length>0&&(c=`${c},${d.join(",")}`),e.addTransformation(c)}return Array.isArray(i)&&i.forEach(o),"string"==typeof r&&o({publicId:r,crop:"fill",width:"1.0",height:"1.0",flags:["relative"]}),{}}},{props:eK,assetTypes:["image","images","video","videos"],plugin:({cldAsset:e,options:t})=>{let{version:r}=t;return("string"==typeof r||"number"==typeof r)&&e.setVersion(`${r}`.replace("v","")),{}}},{props:tt,assetTypes:["image","images"],plugin:({cldAsset:e,options:t})=>{let{zoompan:r=!1}=t,i={format:void 0};if(!0===r)e.effect("e_zoompan");else if("string"==typeof r)"loop"===r?(e.effect("e_zoompan"),e.effect("e_loop")):e.effect(`e_zoompan:${r}`);else if("object"==typeof r){let t,i="e_zoompan";"string"==typeof r.options&&(i=`${i}:${r.options}`),e.effect(i),!0===r.loop?t="e_loop":("string"==typeof r.loop||"number"==typeof r.loop)&&(t=`e_loop:${r.loop}`),t&&e.effect(t)}return!1!==r&&(i.format="auto:animated"),{options:i}}}],tl=f.z.union([tr,to]).describe(JSON.stringify({text:"Asset options (Image or Video) that define delivery URL including public ID and transformations.",path:"/url-loader/assetoptions"}));function tc(e,t,r){if(void 0===t.transformation)return;let{matchType:i="includes"}=r||{};return t.transformation.actions.flatMap(e=>e.toString().split("/").flatMap(e=>e.split(","))).filter(t=>"startsWith"===i?t.startsWith(e):t.includes(e)).length>0}f.z.object({analytics:f.z.union([tn,f.z.boolean()]).describe(JSON.stringify({text:"Tech, dependency, and feature identifiers for tracking SDK usage related to Cloudinary.",path:"/url-loader/analyticsoptions"})).optional(),config:ta.describe(JSON.stringify({text:"Configuration parameters for environment and Cloudinary account.",url:"https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters",path:"/url-loader/analyticsoptions"})).optional(),options:tl}),r(26670);var tu=r(96931),td={abort:"onAbort","batch-cancelled":"onBatchCancelled",close:"onClose","display-changed":"onDisplayChanged",publicid:"onPublicId","queues-end":"onQueuesEnd","queues-start":"onQueuesStart",retry:"onRetry","show-completed":"onShowCompleted","source-changed":"onSourceChanged",success:"onSuccess",tags:"onTags","upload-added":"onUploadAdded"},tp=tm("14.2.5"),tf=tm("6.13.0");function tm(e){let t=e;return t.includes("-")&&(t=t.split("-")[0]),t}function th(e){let t=e?.cloud?.cloudName??process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME;if(!t)throw Error("A Cloudinary Cloud name is required, please make sure NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME is set and configured in your environment.");let r=e?.cloud?.apiKey??process.env.NEXT_PUBLIC_CLOUDINARY_API_KEY,i=e?.url?.secureDistribution??process.env.NEXT_PUBLIC_CLOUDINARY_SECURE_DISTRIBUTION,o=e?.url?.privateCdn??process.env.NEXT_PUBLIC_CLOUDINARY_PRIVATE_CDN;return Object.assign({cloud:{...e?.cloud,apiKey:r,cloudName:t},url:{...e?.url,secureDistribution:i,privateCdn:o}},e)}function tg(e,t,r){return function({options:e,config:t={},analytics:r}){let i,o;!1===r&&(void 0===t?.url&&(t.url={}),t.url.analytics=!1);let n=new Q(t);if("string"!=typeof e?.src)throw Error("Failed to construct Cloudinary URL: Missing source (src) in options.");e?.assetType||(e.assetType="image");let a=[];ts.forEach(({props:e})=>{Object.keys(e).forEach(e=>{if(a.includes(e))throw Error(`Option ${e} already exists!`);a.push(e)})});let s={};if("string"==typeof e.src&&/^https?:\/\//.test(e.src))try{let t=c(e.src);i=t?.publicId,s.seoSuffix=t?.seoSuffix,s.version=t?.version}catch(e){}if(i||(i=e.src),Object.keys(s).forEach(t=>{p(e,t)||(e[t]=s[t])}),e.version??(e.version=1),["image","images"].includes(e.assetType)?o=n.image(i):["video","videos"].includes(e.assetType)&&(o=n.video(i)),void 0===o)throw Error("Invalid asset type.");let l={};if(ts.forEach(({plugin:t,assetTypes:r,props:i,strict:n})=>{let a=e?.assetType!==void 0&&r.includes(e.assetType),s=Object.keys(i),c=Object.keys(e),u=s.map(e=>c.includes(e)).filter(e=>!!e).length>0;if(!a){u&&console.warn(`One of the following props [${s.join(", ")}] was used with an unsupported asset type [${e?.assetType}]`);return}if(e.strictTransformations&&!n){u&&console.warn(`One of the following props [${s.join(", ")}] was used that is not supported with Strict Transformations.`);return}let{options:d}=t({cldAsset:o,options:e})||{options:void 0};Object.assign(l,d)}),"string"==typeof l.resize&&o.addTransformation(l.resize),o.setDeliveryType(e?.deliveryType||"upload"),!e.strictTransformations){if(e?.dpr){let t=e.dpr;"number"==typeof t&&(t=t.toFixed(1)),o.addTransformation(`dpr_${t}`)}let t=e?.format==="default",r=tc("f_",o,{matchType:"startsWith"}),i=r&&void 0!==e?.format;(l?.format||!t&&(!r||i))&&o.format(e?.format||l?.format||"auto");let n=e?.quality==="default",a=tc("q_",o,{matchType:"startsWith"}),s=a&&void 0!==e?.quality;n||a&&!s||o.quality(e?.quality||"auto")}return o.toURL({trackedAnalytics:r})}({options:e,config:th(t),analytics:Object.assign({product:"A",sdkCode:"V",sdkSemver:tf,techVersion:tp,feature:""},r)})}(0,i.forwardRef)(function(e,t){let r=!1,n=["assetType","config","deliveryType","strictTransformations"];ts.forEach(({props:e})=>{Object.keys(e).forEach(e=>{if(n.includes(e))throw Error(`Option ${e} already exists!`);n.push(e)})});let a={alt:e.alt,src:e.src};Object.keys(e).filter(e=>"string"==typeof e&&!n.includes(e)).forEach(t=>a[t]=e[t]);let s=Object.keys(a).map(e=>`${e}:${a[e]}`).join(";"),[l,c]=(0,i.useState)(s),u={};async function p(t){let i=!0;if(r)return;if(r=!0,"function"==typeof e.onError){let r=e.onError(t);"boolean"==typeof r&&!1===r&&(i=!1)}else"boolean"==typeof e.onError&&!1===e.onError&&(i=!1);if(!1===i)return;let o=t.target;await d({src:o.src})&&c(`${s};${Date.now()}`)}n.forEach(t=>{let r=e[t];r&&(u[t]=r)}),!0===e.unoptimized&&(a.src=tg({...u,width:a.width,height:a.height,src:a.src,format:"default",quality:"default"},e.config));let f=(0,i.useCallback)(p,[d,s]),m=o.default;return"default"in m&&(m=m.default),i.createElement(m,{key:l,...a,loader:t=>(function({loaderOptions:e,imageProps:t,cldOptions:r,cldConfig:i={}}){let o={...t,...r};if(o.width="string"==typeof o.width?parseInt(o.width):o.width,o.height="string"==typeof o.height?parseInt(o.height):o.height,"number"==typeof e?.width&&"number"==typeof o.width&&e.width!==o.width){let t=e.width/o.width;o.width=e.width,"number"==typeof o.height&&(o.height=Math.floor(o.height*t))}else"number"==typeof e?.width&&"number"!=typeof o?.width&&(o.width=e?.width);return tg(o,i)})({loaderOptions:t,imageProps:a,cldOptions:u,cldConfig:e.config}),onError:f,ref:t})});var ty=({children:e,config:t,onError:r,onOpen:o,onUpload:n,options:a,signatureEndpoint:s,uploadPreset:l,...c})=>{let u=(0,i.useRef)(),d=(0,i.useRef)(),[p,f]=(0,i.useState)(void 0),[m,h]=(0,i.useState)(void 0),[g,y]=(0,i.useState)(!0),b=th(t),_=s&&function({signatureEndpoint:e,fetch:t}){return function(r,i){if(void 0===e)throw Error("Failed to generate signature: signatureEndpoint property undefined.");if(void 0===t)throw Error("Failed to generate signature: fetch property undefined.");t(e,{method:"POST",body:JSON.stringify({paramsToSign:i}),headers:{"Content-Type":"application/json"}}).then(e=>e.json()).then(e=>{r(e.signature)}).catch(e=>{r(null,e)})}}({signatureEndpoint:String(s),fetch}),z=function({uploadSignature:e,...t},r){let i="function"==typeof e,{cloudName:o,apiKey:n}=r?.cloud||{};if(!o)throw Error("A Cloudinary Cloud name is required, please make sure your environment variable is set and configured in your environment.");if(i&&!n)throw Error("A Cloudinary API Key is required for signed requests, please make sure your environment variable is set and configured in your environment.");if(!i&&!t.uploadPreset)throw Error("A Cloudinary Upload Preset is required for unsigned uploads. Please specify an uploadPreset or configure signed uploads.");let a={cloudName:o,apiKey:n,...t};return i&&(a.uploadSignature=e),a}({uploadPreset:l||process.env.NEXT_PUBLIC_CLOUDINARY_UPLOAD_PRESET,uploadSignature:_,...a},b),v=function(e){return function(t,r){t&&"function"==typeof e.onError&&e.onError(t,r),"function"==typeof e.onResult&&e.onResult(r);let i="string"==typeof r?.event&&td[r.event];"string"==typeof i&&"function"==typeof e[i]&&(0,e[i])(r)}}({onError:e=>{f(e),"function"==typeof r&&r(e,{widget:d.current,...w})},onResult:e=>{if("string"!=typeof e?.event)return;h(e);let t=td[e.event];"string"==typeof t&&"function"==typeof c[t]&&(0,c[t])(e,{widget:d.current,...w});let r=`${t}Action`;r&&"function"==typeof c[r]&&(0,c[r])(e)}});function x(e,t=[]){if(d.current||(d.current=S()),"function"==typeof d?.current[e])return d.current[e](...t)}(0,i.useEffect)(()=>{typeof m>"u"||"success"!==m.event||"function"!=typeof n||("development"===process.env.NODE_ENVIRONMENT&&console.warn("The onUpload callback is deprecated. Please use onSuccess instead."),n(m,d.current))},[m]),(0,i.useEffect)(()=>()=>{d.current?.destroy(),d.current=void 0},[]);let w={close:function(e){x("close",[e])},destroy:function(e){return x("destroy",[e])},hide:function(){x("hide")},isDestroyed:function(){return x("isDestroyed")},isMinimized:function(){return x("isMinimized")},isShowing:function(){return x("isShowing")},minimize:function(){x("minimize")},open:function(e,t){x("open",[e,t]),"function"==typeof o&&o(d.current)},show:function(){x("show")},update:function(){x("update")}};function S(){return u.current?.createUploadWidget(z,v)}return i.createElement(i.Fragment,null,"function"==typeof e&&e({cloudinary:u.current,widget:d.current,results:m,error:p,isLoading:g,...w}),i.createElement(tu.default,{id:`cloudinary-uploadwidget-${Math.floor(100*Math.random())}`,src:"https://upload-widget.cloudinary.com/global/all.js",onLoad:function(){var e;y(!1),u.current||(u.current=window.cloudinary),e=()=>{d.current||(d.current=S())},window&&"requestIdleCallback"in window?requestIdleCallback(e):setTimeout(()=>e(),1)},onError:e=>console.error(`Failed to load Cloudinary Upload Widget: ${e.message}`)}))}}};